{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "addAuthorizedCaller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passenger",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "flight",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "buy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passenger",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "flight",
						"type": "address"
					}
				],
				"name": "creditInsurees",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fund",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "input",
						"type": "address"
					}
				],
				"name": "getAuthCaller",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getContractOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "flightKey",
						"type": "bytes32"
					}
				],
				"name": "getFlightInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFlightKeysForUI",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passenger",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "flight",
						"type": "address"
					}
				],
				"name": "getInsurancePayoutAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumAirlines",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "isAddressAirline",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "isAddressAuthorized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "isAddressFundedAirline",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "isAddressPassenger",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passenger",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "flight",
						"type": "address"
					}
				],
				"name": "isInsuranceCollectable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOperational",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "airlineAddress",
						"type": "address"
					}
				],
				"name": "payAirlineFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "airlineAddress",
						"type": "address"
					}
				],
				"name": "registerAirline",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "airline",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "flightName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "registerFlight",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passengerAddress",
						"type": "address"
					}
				],
				"name": "registerPassenger",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inputAddress",
						"type": "address"
					}
				],
				"name": "removeAuthorizedCaller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "mode",
						"type": "bool"
					}
				],
				"name": "setOperatingStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "passenger",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "flight",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "setRepaymentStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"buy(address,address,uint256)": {
					"details": "Buy insurance for a flight"
				},
				"constructor": {
					"details": "Constructor      The deploying account becomes contractOwner"
				},
				"creditInsurees(address,address)": {
					"details": "Credits payouts to insurees"
				},
				"fund()": {
					"details": "Initial funding for the insurance. Unless there are too many delayed flights      resulting in insurance payouts, the contract should be self-sustaining"
				},
				"isOperational()": {
					"details": "Get operating status of contract",
					"returns": {
						"_0": "A bool that is the current operating status"
					}
				},
				"registerAirline(address)": {
					"details": "Add an airline to the registration queue      Can only be called from FlightSuretyApp contract"
				},
				"setOperatingStatus(bool)": {
					"details": "Sets contract operations on/off When operational mode is disabled, all write transactions except for this one will fail"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/FlightSuretyData.sol": "FlightSuretyData"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/FlightSuretyData.sol": {
			"keccak256": "0xb8e4652be8e7204ed1c959874c83791a69745c2996c41730f3a55d2735b6057b",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f96a01b12530e16db5ecdc3fa2e4712e32df7d57df223b3e830158e823da7d8",
				"dweb:/ipfs/QmcTwYX7uyvftJh7PANUWNBBgr7Hs17W8JgYdyjS7fDRJB"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
			"license": "MIT",
			"urls": [
				"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
				"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
			]
		}
	},
	"version": 1
}